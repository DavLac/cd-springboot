<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>dev.courses</groupId>
	<artifactId>springdemo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springdemo</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<mapstruct.version>1.5.3.Final</mapstruct.version>
		<lombok.version>1.18.24</lombok.version>
		<!-- tests -->
		<jacoco.version>0.8.7</jacoco.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- SWAGGER and OPEN API -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.13</version>
		</dependency>

		<!-- PERSISTENCE -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.5.1</version>
		</dependency>

		<!-- MAPSTRUCT -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<!-- TEST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock-standalone</artifactId>
			<version>2.27.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>6.4.0</version>
				<configuration>
					<generatorName>spring</generatorName>
					<library>spring-boot</library>
					<supportingFilesToGenerate>
						ApiUtil.java
					</supportingFilesToGenerate>
					<!-- Do not generate API classes (controllers) -->
					<generateApis>false</generateApis>
					<configOptions>
						<documentationProvider>source</documentationProvider>
						<annotationLibrary>none</annotationLibrary>
						<!-- Disable this feature to avoid jackson-databind-nullable dependency -->
						<openApiNullable>false</openApiNullable>
						<!-- Use Spring Boot 3 dependencies (especially jakarta instead of javax) -->
						<!-- disable because using springboot 2 <useSpringBoot3>true</useSpringBoot3> -->
						<!-- We can disable Spring Bean Validation for generated models -->
						<useBeanValidation>false</useBeanValidation>
						<delegatePattern>true</delegatePattern>
					</configOptions>
				</configuration>
				<executions>
					<execution>
						<id>generate-cki</id>
						<goals><goal>generate</goal></goals>
						<configuration>
							<inputSpec>
								${project.basedir}/src/main/resources/openapi/api-cki.yml
							</inputSpec>
							<modelPackage>nl.rabobank.checks.orchestrator.client.cki.model</modelPackage>
							<modelNamePrefix>Cki</modelNamePrefix>
						</configuration>
					</execution>
					<execution>
						<id>generate-siebel</id>
						<goals><goal>generate</goal></goals>
						<configuration>
							<inputSpec>
								${project.basedir}/src/main/resources/openapi/api-siebel-relationchecks.yml
							</inputSpec>
							<modelPackage>nl.rabobank.checks.orchestrator.client.siebel.model.check</modelPackage>
							<modelNamePrefix>Siebel</modelNamePrefix>
						</configuration>
					</execution>
					<execution>
						<id>generate-siebel-relation</id>
						<goals><goal>generate</goal></goals>
						<configuration>
							<inputSpec>
								${project.basedir}/src/main/resources/openapi/api-siebel-relation.yaml
							</inputSpec>
							<modelPackage>nl.rabobank.checks.orchestrator.client.siebel.model.relation</modelPackage>
							<modelNamePrefix>Siebel</modelNamePrefix>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
